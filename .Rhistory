library(igraph)
data <- readRDS("bdi_result_crs.rds")
View(data)
View(data[["edge_lists"]][["2005"]])
g <- make_empty_graph()
g
g <- make_graph(edges = c(1, 2, 1, 5), n = 10, directed = FALSE)
g
g
g
g <- make_graph(~ 1--2, 1--5, 3, 4, 5, 6, 7, 8, 9, 10)
g
summary(g)
g <- make_graph("Zachary")
g
plot(g)
g <- make_empty_graph()
plot(g)
g <- make_graph(edges = c(1, 2, 1, 5), n = 10, directed = FALSE)
plot(g)
g <- make_graph(~ 1--2, 1--5, 3, 4, 5, 6, 7, 8, 9, 10)
g <- make_graph(~ 1--2, 1--5, 3, 4, 5, 6, 7, 8, 9, 10)
plot(g)
summary(g)
g <- make_graph("Zachary")
plot(g)
g <- add_vertices(g, 3)
plot(g)
g <- add_edges(g, edges = c(1, 35, 1, 36, 34, 37))
plot(g)
g <- add_edges(g, edges = c(38, 37))
g <- g %>%
add_edges(edges = c(1, 34)) %>%
add_vertices(3) %>%
add_edges(edges = c(38, 39, 39, 40, 40, 38, 40, 37))
g
edge_id_to_delete <- get_edge_ids(g, c(1, 34))
edge_id_to_delete
g <- delete_edges(g, edge_id_to_delete)
g <- make_ring(10) %>% delete_edges("10|1")
plot(g)
View(g)
g <- make_ring(5)
View(g)
plot(g)
g <- delete_edges(g, get_edge_ids(g, c(1, 5, 4, 5)))
plot(g)
View(data)
plot(data)
plot(data$networks)
plot(data$networks$bdi_2005)
View(data)
View(data[["edge_lists"]][["2005"]])
View(data)
View(data[["edge_lists"]][["2005"]])
g <- make_graph(
~ Alice - Boris:Himari:Moshe, Himari - Alice:Nang:Moshe:Samira,
Ibrahim - Nang:Moshe, Nang - Samira
)
g
plot(g)
V(g)$age <- c(25, 31, 18, 23, 47, 22, 50)
V(g)$gender <- c("f", "m", "f", "m", "m", "f", "m")
E(g)$is_formal <- c(FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE)
summary(g)
plot(g)
g <- make_graph(
~ Alice - Boris:Himari:Moshe, Himari - Alice:Nang:Moshe:Samira,
Ibrahim - Nang:Moshe, Nang - Samira
) %>%
set_vertex_attr("age", value = c(25, 31, 18, 23, 47, 22, 50)) %>%
set_vertex_attr("gender", value = c("f", "m", "f", "m", "m", "f", "m")) %>%
set_edge_attr("is_formal", value = c(FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE))
summary(g)
plot(g)
degree(g)
plot(g)
degree(g)
plot(g)
as_adjacency_matrix(data$networks$bdi_2005)
View(data)
as_adjacency_matrix(data$networks$bdi_2005)
layout <- layout_with_kk(g)
layout
layout <- layout_as_tree(g, root = 2)
layout
layout <- layout_with_kk(g)
plot(g, layout = layout, main = "Social network with the Kamada-Kawai layout algorithm")
install.packages("visNetwork")
library(visNetwork)
install.packages("tidygraph")
library(tidygraph)
help("visNetwork")
visDocumentation()
head(data$edge_lists$2005)
View(data)
View(data[["edge_lists"]][["2005"]])
test <- data$edge_lists$2005
test <- tibble(data$edge_lists$2005)
View(data)
test <- data[["edge_lists"]][["2005"]]
head(data[["edge_lists"]][["2005"]])
test_2005 <- data[["edge_lists"]][["2005"]]
rm(test)
View(data)
bdi_2005 <- data[["edge_lists"]][["2005"]]
rm(tesst_2005)
rm(test_2005)
colnames(bdi_2005)
View(bdi_2005)
library(dplyr)
# Subsetting to Burundi's 2005 data
bdi_2005 <- data[["edge_lists"]][["2005"]]
# Create a node list of all unique orgs from sender and receiver
nodes <- bdi_2005 %>%
select(id, name = sender, orgtype = sender_orgtype) %>%
bind_rows(
bdi_2005 %>%
select(id, name = receiver, orgtype = receiver_orgtype)
) %>%
distinct(name, .keep_all = TRUE) %>%
mutate(label = name, id = name)  # visNetwork needs 'id' and 'label'
# Creating edge data
edges <- bdi_2005 %>%
mutate(from = sender, to = receiver) %>%
select(from, to, cost, n_contracts)
# Creating edge data
edges <- bdi_2005 %>%
mutate(from = sender, to = receiver) %>%
select(from, to, cost, n_contracts)
View(bdi_2005)
visNetwork(nodes, edges)
# Creating visualization
visNetwork(nodes, edges) %>%
visNodes(shape = "dot", scaling = list(min = 10, max = 30)) %>%
visEdges(smooth = TRUE) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "Government", color = "lightblue") %>%
visGroups(groupname = "NGO", color = "lightgreen") %>%
visGroups(groupname = "Private", color = "orange") %>%
visLegend() %>%
visLayout(randomSeed = 123)
View(bdi_2005)
library(visNetwork)
library(tidygraph)
library(dplyr)
# Subsetting to Burundi's 2005 data
bdi_2005 <- data[["edge_lists"]][["2005"]]
# Create a node list of all unique orgs from sender and receiver
nodes <- bdi_2005 %>%
select(id, name = sender, orgtype = sender_orgtype) %>%
bind_rows(
bdi_2005 %>%
select(id, name = receiver, orgtype = receiver_orgtype)
) %>%
distinct(name, .keep_all = TRUE) %>%
mutate(label = name, id = name)  # visNetwork needs 'id' and 'label'
# Creating edge data
edges <- bdi_2005 %>%
mutate(from = sender, to = receiver) %>%
select(from, to, cost, n_contracts)
# Creating visualization
visNetwork(nodes, edges) %>%
visNodes(shape = "dot", scaling = list(min = 10, max = 30)) %>%
visEdges(smooth = TRUE) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "Government", color = "lightblue") %>%
visGroups(groupname = "NGO", color = "lightgreen") %>%
visGroups(groupname = "Private", color = "orange") %>%
visLegend() %>%
visLayout(randomSeed = 123)
View(data)
View(data)
View(bdi_2005)
View(nodes)
help("visNetwork")
?visDocumentation
?visDocumentation
View(bdi_2005)
View(bdi_2005)
View(nodes)
help("visNetwork")
View(nodes)
View(data)
View(nodes)
View(edges)
visNetwork(nodes, edges)
# Creating visualization
visNetwork(nodes, edges) %>%
visNodes(shape = "circle", scaling = list(min = 10, max = 30)) %>%
visEdges(smooth = TRUE) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "Government", color = "lightblue") %>%
visGroups(groupname = "NGO", color = "lightgreen") %>%
visGroups(groupname = "Private", color = "orange") %>%
visLegend() %>%
visLayout(randomSeed = 123)
# Creating visualization
visNetwork(nodes, edges) %>%
visNodes(shape = "dot", scaling = list(min = 10, max = 30)) %>%
visEdges(smooth = TRUE) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "Government", color = "lightblue") %>%
visGroups(groupname = "NGO", color = "lightgreen") %>%
visGroups(groupname = "Private", color = "orange") %>%
visLegend() %>%
visLayout(randomSeed = 123)
# Creating visualization
visNetwork(nodes, edges) %>%
visNodes(shape = "ellipse", scaling = list(min = 10, max = 30)) %>%
visEdges(smooth = TRUE) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "Government", color = "lightblue") %>%
visGroups(groupname = "NGO", color = "lightgreen") %>%
visGroups(groupname = "Private", color = "orange") %>%
visLegend() %>%
visLayout(randomSeed = 123)
# Creating visualization
visNetwork(nodes, edges) %>%
visNodes(shape = "database", scaling = list(min = 10, max = 30)) %>%
visEdges(smooth = TRUE) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "Government", color = "lightblue") %>%
visGroups(groupname = "NGO", color = "lightgreen") %>%
visGroups(groupname = "Private", color = "orange") %>%
visLegend() %>%
visLayout(randomSeed = 123)
# Creating visualization
visNetwork(nodes, edges) %>%
visNodes(shape = "box", scaling = list(min = 10, max = 30)) %>%
visEdges(smooth = TRUE) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "Government", color = "lightblue") %>%
visGroups(groupname = "NGO", color = "lightgreen") %>%
visGroups(groupname = "Private", color = "orange") %>%
visLegend() %>%
visLayout(randomSeed = 123)
# Creating visualization
visNetwork(nodes, edges) %>%
visNodes(shape = "dot", scaling = list(min = 10, max = 30)) %>%
visEdges(smooth = TRUE) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "Government", color = "lightblue") %>%
visGroups(groupname = "NGO", color = "lightgreen") %>%
visGroups(groupname = "Private", color = "orange") %>%
visLegend() %>%
visLayout(randomSeed = 123)
# Creating visualization
visNetwork(nodes, edges) %>%
visNodes(shape = "dot", scaling = list(min = 10, max = 30)) %>%
visEdges(smooth = TRUE) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "Government", color = "lightblue") %>%
visGroups(groupname = "NGO", color = "lightgreen") %>%
visGroups(groupname = "Private", color = "orange") %>%
visLegend(zoom = TRUE) %>%
visLayout(randomSeed = 123)
